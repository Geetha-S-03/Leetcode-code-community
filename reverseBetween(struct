/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* reverseBetween(struct ListNode* head, int left, int right) {
     if (head == NULL || left == right)
         return head;
    struct ListNode* new = (struct ListNode*)malloc(sizeof(struct ListNode));
    new->next = head;
    struct ListNode* prev = new;
    for (int i = 1; i < left; i++) {
        prev = prev->next;
    }
    struct ListNode* start = prev->next;
    struct ListNode* end = start->next;
    for (int i = 0; i < right - left; i++) {
        start->next = end->next;
        end->next = prev->next;
        prev->next = end;
        end = start->next;
    }

    return new->next;
}
